// Code generated by riza; DO NOT EDIT.

package bnkdev

import (
	"context"
	"fmt"
)

// Accounts are your bank accounts with bnk.dev. They can store money and
// receive & originate transfers.
type Account struct {
	ID string `json:"id,omitempty"` // The account identifier.

	// The current balance of the account in the minor unit of the currency.
	// For dollars, for example, this is cents.
	Balance int `json:"balance,omitempty"`

	// The identifier for the entity this account belongs to.
	EntityID string `json:"entity_id,omitempty"`

	// The interest accrued but not yet paid.
	InterestAccrued string `json:"interest_accrued,omitempty"`

	// The latest ISO 8601 date on which interest was accrued.
	InterestAccruedAt string `json:"interest_accrued_at,omitempty"`

	// The account path that can be used in the API or your dashboard.
	Path string `json:"path,omitempty"`

	Currency string `json:"currency,omitempty"` // The ISO 4217 code for the account currency.
	Name     string `json:"name,omitempty"`     // The name you chose for the account.
}

type ListAccountsResponse struct {
	Data             []Account        `json:"data,omitempty"`
	ResponseMetadata ResponseMetadata `json:"response_metadata,omitempty"`
}

type ResponseMetadata struct {
	NextCursor string `json:"next_cursor,omitempty"`
}

// Returns a list of agent objects that match the provided query.
func (c *Client) ListAccounts(ctx context.Context) (*ListAccountsResponse, error) {
	var resp ListAccountsResponse
	if err := c.request(ctx, "GET", "/accounts", nil, nil, &resp); err != nil {
		return nil, fmt.Errorf("ListAccounts: %w", err)
	}
	return &resp, nil
}
